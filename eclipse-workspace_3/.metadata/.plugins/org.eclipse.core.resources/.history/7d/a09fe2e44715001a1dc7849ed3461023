package com.javainterviewpoint;

import java.sql.Connection;

import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.mvc.method.annotation.SseEmitter;
import org.springframework.web.servlet.mvc.method.annotation.StreamingResponseBody;

import com.google.gson.Gson;

import java.io.IOException;
import java.io.OutputStream;
import java.io.StringWriter;
import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;

@Controller
public class HelloController
{
	
	 @GetMapping({"/", "/hello"})
	 public String showWelcomePage()
	 {
		 return "hello";
	 }
	 
	 @RequestMapping(value = "/data", produces = MediaType.APPLICATION_JSON_VALUE)
	 @ResponseBody
	 public StreamingResponseBody getData()
	 {

		 String connectionUrl =
	                "jdbc:sqlserver://localhost\\SQLEXPRESS01:1433;"
	                + "databaseName=AdventureWorksLT2016;"
	                + "username=Alex;"
	                + "password=alex01";

		 ResultSet resultSet = null;

	 	try (Connection connection = DriverManager.getConnection(connectionUrl);
            Statement statement = connection.createStatement();)
	 	{

	        // Create and execute a SELECT SQL statement.
	        String selectSql = "SELECT TOP 10 Title, FirstName, LastName from SalesLT.Customer";
	        resultSet = statement.executeQuery(selectSql);
	        final ResultSet fixed = resultSet;
	        
	        return new StreamingResponseBody() 
	        {
	            @Override
	            public void writeTo(OutputStream out) throws IOException 
	            {
	            	Gson gson = new Gson();
	            	for (int i = 0; i < 500; i++) 
	            	{	            		
	            		int[] row = new int[] {i, i, i};	            		
	                    out.write((gson.toJson(row)+"|").getBytes());
	                    //out.write((i+", ").getBytes());
	                    out.flush();
	                    try {
	                        Thread.sleep(5);
	                    } catch (InterruptedException e) {
	                        e.printStackTrace();
	                    }
	                }
	            	/*try 
	            	{
						//while (fixed.next())  
						//{
//							String[] row = new String[] {fixed.getString(2), fixed.getString(3)};
//							Gson gson = new Gson();
//						    String json = gson.toJson(row);
//						    out.write(json.getBytes());
//						    out.flush();
						//}
	            		for (int i = 0; i < 30; i++)
	            		{
	            			out.write(("response " + i + "\r\n").getBytes());	            			
	            			out.flush();
	            			try 
	            			{
	                            Thread.sleep(1000);
	                        } catch (InterruptedException e) 
	            			{
	                            e.printStackTrace();
	                        }
	            		}*/
	            		
	            		
	            		//out.write("ggggg\r\n".getBytes());
					    //out.flush();
					/*
					 * } catch (Exception e) { // TODO Auto-generated catch block
					 * e.printStackTrace(); }
					 */
	            }
	        };       
	        
        }
        catch (SQLException e) 
	 	{
            e.printStackTrace();
        }

	 	return null;
	 }
}  
